// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: api/proto_files/multiple_step.proto

package step_pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StepType int32

const (
	StepType_UNKNOWN StepType = 0
	StepType_REQUEST StepType = 1
	StepType_SCRIPT  StepType = 2
	StepType_FOR     StepType = 3
	StepType_IF      StepType = 4
)

// Enum value maps for StepType.
var (
	StepType_name = map[int32]string{
		0: "UNKNOWN",
		1: "REQUEST",
		2: "SCRIPT",
		3: "FOR",
		4: "IF",
	}
	StepType_value = map[string]int32{
		"UNKNOWN": 0,
		"REQUEST": 1,
		"SCRIPT":  2,
		"FOR":     3,
		"IF":      4,
	}
)

func (x StepType) Enum() *StepType {
	p := new(StepType)
	*p = x
	return p
}

func (x StepType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StepType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_files_multiple_step_proto_enumTypes[0].Descriptor()
}

func (StepType) Type() protoreflect.EnumType {
	return &file_api_proto_files_multiple_step_proto_enumTypes[0]
}

func (x StepType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StepType.Descriptor instead.
func (StepType) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_files_multiple_step_proto_rawDescGZIP(), []int{0}
}

type Step struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeOfStep StepType `protobuf:"varint,1,opt,name=TypeOfStep,proto3,enum=GGargantua.v1.request.StepType" json:"TypeOfStep,omitempty"`
	Content    string   `protobuf:"bytes,2,opt,name=Content,proto3" json:"Content,omitempty"`
}

func (x *Step) Reset() {
	*x = Step{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_files_multiple_step_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Step) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Step) ProtoMessage() {}

func (x *Step) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_files_multiple_step_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Step.ProtoReflect.Descriptor instead.
func (*Step) Descriptor() ([]byte, []int) {
	return file_api_proto_files_multiple_step_proto_rawDescGZIP(), []int{0}
}

func (x *Step) GetTypeOfStep() StepType {
	if x != nil {
		return x.TypeOfStep
	}
	return StepType_UNKNOWN
}

func (x *Step) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type MultiSteps struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Steps []*Step `protobuf:"bytes,1,rep,name=Steps,proto3" json:"Steps,omitempty"`
}

func (x *MultiSteps) Reset() {
	*x = MultiSteps{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_files_multiple_step_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultiSteps) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiSteps) ProtoMessage() {}

func (x *MultiSteps) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_files_multiple_step_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiSteps.ProtoReflect.Descriptor instead.
func (*MultiSteps) Descriptor() ([]byte, []int) {
	return file_api_proto_files_multiple_step_proto_rawDescGZIP(), []int{1}
}

func (x *MultiSteps) GetSteps() []*Step {
	if x != nil {
		return x.Steps
	}
	return nil
}

type StepResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result    []byte        `protobuf:"bytes,1,opt,name=Result,proto3" json:"Result,omitempty"`
	SubResult []*StepResult `protobuf:"bytes,2,rep,name=SubResult,proto3" json:"SubResult,omitempty"`
}

func (x *StepResult) Reset() {
	*x = StepResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_files_multiple_step_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StepResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StepResult) ProtoMessage() {}

func (x *StepResult) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_files_multiple_step_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StepResult.ProtoReflect.Descriptor instead.
func (*StepResult) Descriptor() ([]byte, []int) {
	return file_api_proto_files_multiple_step_proto_rawDescGZIP(), []int{2}
}

func (x *StepResult) GetResult() []byte {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *StepResult) GetSubResult() []*StepResult {
	if x != nil {
		return x.SubResult
	}
	return nil
}

type MultiResults struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*StepResult `protobuf:"bytes,1,rep,name=Results,proto3" json:"Results,omitempty"`
}

func (x *MultiResults) Reset() {
	*x = MultiResults{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_files_multiple_step_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultiResults) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiResults) ProtoMessage() {}

func (x *MultiResults) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_files_multiple_step_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiResults.ProtoReflect.Descriptor instead.
func (*MultiResults) Descriptor() ([]byte, []int) {
	return file_api_proto_files_multiple_step_proto_rawDescGZIP(), []int{3}
}

func (x *MultiResults) GetResults() []*StepResult {
	if x != nil {
		return x.Results
	}
	return nil
}

var File_api_proto_files_multiple_step_proto protoreflect.FileDescriptor

var file_api_proto_files_multiple_step_proto_rawDesc = []byte{
	0x0a, 0x23, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x66, 0x69, 0x6c, 0x65,
	0x73, 0x2f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x5f, 0x73, 0x74, 0x65, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x47, 0x47, 0x61, 0x72, 0x67, 0x61, 0x6e, 0x74, 0x75,
	0x61, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x61, 0x0a, 0x04,
	0x53, 0x74, 0x65, 0x70, 0x12, 0x3f, 0x0a, 0x0a, 0x54, 0x79, 0x70, 0x65, 0x4f, 0x66, 0x53, 0x74,
	0x65, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x47, 0x47, 0x61, 0x72, 0x67,
	0x61, 0x6e, 0x74, 0x75, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x53, 0x74, 0x65, 0x70, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x54, 0x79, 0x70, 0x65, 0x4f,
	0x66, 0x53, 0x74, 0x65, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22,
	0x3f, 0x0a, 0x0a, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x53, 0x74, 0x65, 0x70, 0x73, 0x12, 0x31, 0x0a,
	0x05, 0x53, 0x74, 0x65, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x47,
	0x47, 0x61, 0x72, 0x67, 0x61, 0x6e, 0x74, 0x75, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x74, 0x65, 0x70, 0x52, 0x05, 0x53, 0x74, 0x65, 0x70, 0x73,
	0x22, 0x65, 0x0a, 0x0a, 0x53, 0x74, 0x65, 0x70, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x3f, 0x0a, 0x09, 0x53, 0x75, 0x62, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x47, 0x47, 0x61, 0x72,
	0x67, 0x61, 0x6e, 0x74, 0x75, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x53, 0x74, 0x65, 0x70, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x09, 0x53, 0x75,
	0x62, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x4b, 0x0a, 0x0c, 0x4d, 0x75, 0x6c, 0x74, 0x69,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x3b, 0x0a, 0x07, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x47, 0x47, 0x61, 0x72, 0x67,
	0x61, 0x6e, 0x74, 0x75, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x53, 0x74, 0x65, 0x70, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x07, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x73, 0x2a, 0x41, 0x0a, 0x08, 0x53, 0x74, 0x65, 0x70, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0b, 0x0a,
	0x07, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x43,
	0x52, 0x49, 0x50, 0x54, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x46, 0x4f, 0x52, 0x10, 0x03, 0x12,
	0x06, 0x0a, 0x02, 0x49, 0x46, 0x10, 0x04, 0x32, 0x74, 0x0a, 0x13, 0x4d, 0x75, 0x6c, 0x74, 0x69,
	0x70, 0x6c, 0x65, 0x53, 0x74, 0x65, 0x70, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5d,
	0x0a, 0x13, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c,
	0x65, 0x53, 0x74, 0x65, 0x70, 0x12, 0x21, 0x2e, 0x47, 0x47, 0x61, 0x72, 0x67, 0x61, 0x6e, 0x74,
	0x75, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4d, 0x75,
	0x6c, 0x74, 0x69, 0x53, 0x74, 0x65, 0x70, 0x73, 0x1a, 0x23, 0x2e, 0x47, 0x47, 0x61, 0x72, 0x67,
	0x61, 0x6e, 0x74, 0x75, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x42, 0x16, 0x5a,
	0x14, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74,
	0x65, 0x70, 0x5f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_proto_files_multiple_step_proto_rawDescOnce sync.Once
	file_api_proto_files_multiple_step_proto_rawDescData = file_api_proto_files_multiple_step_proto_rawDesc
)

func file_api_proto_files_multiple_step_proto_rawDescGZIP() []byte {
	file_api_proto_files_multiple_step_proto_rawDescOnce.Do(func() {
		file_api_proto_files_multiple_step_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_proto_files_multiple_step_proto_rawDescData)
	})
	return file_api_proto_files_multiple_step_proto_rawDescData
}

var file_api_proto_files_multiple_step_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_proto_files_multiple_step_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_api_proto_files_multiple_step_proto_goTypes = []interface{}{
	(StepType)(0),        // 0: GGargantua.v1.request.StepType
	(*Step)(nil),         // 1: GGargantua.v1.request.Step
	(*MultiSteps)(nil),   // 2: GGargantua.v1.request.MultiSteps
	(*StepResult)(nil),   // 3: GGargantua.v1.request.StepResult
	(*MultiResults)(nil), // 4: GGargantua.v1.request.MultiResults
}
var file_api_proto_files_multiple_step_proto_depIdxs = []int32{
	0, // 0: GGargantua.v1.request.Step.TypeOfStep:type_name -> GGargantua.v1.request.StepType
	1, // 1: GGargantua.v1.request.MultiSteps.Steps:type_name -> GGargantua.v1.request.Step
	3, // 2: GGargantua.v1.request.StepResult.SubResult:type_name -> GGargantua.v1.request.StepResult
	3, // 3: GGargantua.v1.request.MultiResults.Results:type_name -> GGargantua.v1.request.StepResult
	2, // 4: GGargantua.v1.request.MultipleStepService.ExecuteMultipleStep:input_type -> GGargantua.v1.request.MultiSteps
	4, // 5: GGargantua.v1.request.MultipleStepService.ExecuteMultipleStep:output_type -> GGargantua.v1.request.MultiResults
	5, // [5:6] is the sub-list for method output_type
	4, // [4:5] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_api_proto_files_multiple_step_proto_init() }
func file_api_proto_files_multiple_step_proto_init() {
	if File_api_proto_files_multiple_step_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_proto_files_multiple_step_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Step); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_files_multiple_step_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultiSteps); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_files_multiple_step_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StepResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_files_multiple_step_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultiResults); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_proto_files_multiple_step_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_proto_files_multiple_step_proto_goTypes,
		DependencyIndexes: file_api_proto_files_multiple_step_proto_depIdxs,
		EnumInfos:         file_api_proto_files_multiple_step_proto_enumTypes,
		MessageInfos:      file_api_proto_files_multiple_step_proto_msgTypes,
	}.Build()
	File_api_proto_files_multiple_step_proto = out.File
	file_api_proto_files_multiple_step_proto_rawDesc = nil
	file_api_proto_files_multiple_step_proto_goTypes = nil
	file_api_proto_files_multiple_step_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// MultipleStepServiceClient is the client API for MultipleStepService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MultipleStepServiceClient interface {
	ExecuteMultipleStep(ctx context.Context, in *MultiSteps, opts ...grpc.CallOption) (*MultiResults, error)
}

type multipleStepServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewMultipleStepServiceClient(cc grpc.ClientConnInterface) MultipleStepServiceClient {
	return &multipleStepServiceClient{cc}
}

func (c *multipleStepServiceClient) ExecuteMultipleStep(ctx context.Context, in *MultiSteps, opts ...grpc.CallOption) (*MultiResults, error) {
	out := new(MultiResults)
	err := c.cc.Invoke(ctx, "/GGargantua.v1.request.MultipleStepService/ExecuteMultipleStep", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MultipleStepServiceServer is the server API for MultipleStepService service.
type MultipleStepServiceServer interface {
	ExecuteMultipleStep(context.Context, *MultiSteps) (*MultiResults, error)
}

// UnimplementedMultipleStepServiceServer can be embedded to have forward compatible implementations.
type UnimplementedMultipleStepServiceServer struct {
}

func (*UnimplementedMultipleStepServiceServer) ExecuteMultipleStep(context.Context, *MultiSteps) (*MultiResults, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExecuteMultipleStep not implemented")
}

func RegisterMultipleStepServiceServer(s *grpc.Server, srv MultipleStepServiceServer) {
	s.RegisterService(&_MultipleStepService_serviceDesc, srv)
}

func _MultipleStepService_ExecuteMultipleStep_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MultiSteps)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MultipleStepServiceServer).ExecuteMultipleStep(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/GGargantua.v1.request.MultipleStepService/ExecuteMultipleStep",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MultipleStepServiceServer).ExecuteMultipleStep(ctx, req.(*MultiSteps))
	}
	return interceptor(ctx, in, info, handler)
}

var _MultipleStepService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "GGargantua.v1.request.MultipleStepService",
	HandlerType: (*MultipleStepServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ExecuteMultipleStep",
			Handler:    _MultipleStepService_ExecuteMultipleStep_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/proto_files/multiple_step.proto",
}
