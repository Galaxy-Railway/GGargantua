// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: api/proto_files/step.proto

package protobuf

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StepType int32

const (
	StepType_UNKNOWN  StepType = 0
	StepType_REQUEST  StepType = 1
	StepType_SCRIPT   StepType = 2
	StepType_FOR      StepType = 3
	StepType_IF       StepType = 4
	StepType_SEQUENCE StepType = 5
)

// Enum value maps for StepType.
var (
	StepType_name = map[int32]string{
		0: "UNKNOWN",
		1: "REQUEST",
		2: "SCRIPT",
		3: "FOR",
		4: "IF",
		5: "SEQUENCE",
	}
	StepType_value = map[string]int32{
		"UNKNOWN":  0,
		"REQUEST":  1,
		"SCRIPT":   2,
		"FOR":      3,
		"IF":       4,
		"SEQUENCE": 5,
	}
)

func (x StepType) Enum() *StepType {
	p := new(StepType)
	*p = x
	return p
}

func (x StepType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StepType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_files_step_proto_enumTypes[0].Descriptor()
}

func (StepType) Type() protoreflect.EnumType {
	return &file_api_proto_files_step_proto_enumTypes[0]
}

func (x StepType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StepType.Descriptor instead.
func (StepType) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_files_step_proto_rawDescGZIP(), []int{0}
}

type Step struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type         StepType          `protobuf:"varint,1,opt,name=Type,proto3,enum=GGargantua.v1.proto.StepType" json:"Type,omitempty"`
	RequestStep  *RequestStepType  `protobuf:"bytes,2,opt,name=RequestStep,proto3" json:"RequestStep,omitempty"`
	ScriptStep   *ScriptStepType   `protobuf:"bytes,3,opt,name=ScriptStep,proto3" json:"ScriptStep,omitempty"`
	ForStep      *ForStepType      `protobuf:"bytes,4,opt,name=ForStep,proto3" json:"ForStep,omitempty"`
	IfStep       *IfStepType       `protobuf:"bytes,5,opt,name=IfStep,proto3" json:"IfStep,omitempty"`
	SequenceStep *SequenceStepType `protobuf:"bytes,6,opt,name=SequenceStep,proto3" json:"SequenceStep,omitempty"`
}

func (x *Step) Reset() {
	*x = Step{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_files_step_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Step) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Step) ProtoMessage() {}

func (x *Step) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_files_step_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Step.ProtoReflect.Descriptor instead.
func (*Step) Descriptor() ([]byte, []int) {
	return file_api_proto_files_step_proto_rawDescGZIP(), []int{0}
}

func (x *Step) GetType() StepType {
	if x != nil {
		return x.Type
	}
	return StepType_UNKNOWN
}

func (x *Step) GetRequestStep() *RequestStepType {
	if x != nil {
		return x.RequestStep
	}
	return nil
}

func (x *Step) GetScriptStep() *ScriptStepType {
	if x != nil {
		return x.ScriptStep
	}
	return nil
}

func (x *Step) GetForStep() *ForStepType {
	if x != nil {
		return x.ForStep
	}
	return nil
}

func (x *Step) GetIfStep() *IfStepType {
	if x != nil {
		return x.IfStep
	}
	return nil
}

func (x *Step) GetSequenceStep() *SequenceStepType {
	if x != nil {
		return x.SequenceStep
	}
	return nil
}

type StepResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result    string        `protobuf:"bytes,1,opt,name=Result,proto3" json:"Result,omitempty"`
	SubResult []*StepResult `protobuf:"bytes,2,rep,name=SubResult,proto3" json:"SubResult,omitempty"`
}

func (x *StepResult) Reset() {
	*x = StepResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_files_step_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StepResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StepResult) ProtoMessage() {}

func (x *StepResult) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_files_step_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StepResult.ProtoReflect.Descriptor instead.
func (*StepResult) Descriptor() ([]byte, []int) {
	return file_api_proto_files_step_proto_rawDescGZIP(), []int{1}
}

func (x *StepResult) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

func (x *StepResult) GetSubResult() []*StepResult {
	if x != nil {
		return x.SubResult
	}
	return nil
}

type IfStepType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScriptStep *ScriptStepType `protobuf:"bytes,1,opt,name=ScriptStep,proto3" json:"ScriptStep,omitempty"`
	TrueStep   *Step           `protobuf:"bytes,2,opt,name=TrueStep,proto3" json:"TrueStep,omitempty"`
	FalseStep  *Step           `protobuf:"bytes,3,opt,name=FalseStep,proto3" json:"FalseStep,omitempty"`
}

func (x *IfStepType) Reset() {
	*x = IfStepType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_files_step_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IfStepType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IfStepType) ProtoMessage() {}

func (x *IfStepType) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_files_step_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IfStepType.ProtoReflect.Descriptor instead.
func (*IfStepType) Descriptor() ([]byte, []int) {
	return file_api_proto_files_step_proto_rawDescGZIP(), []int{2}
}

func (x *IfStepType) GetScriptStep() *ScriptStepType {
	if x != nil {
		return x.ScriptStep
	}
	return nil
}

func (x *IfStepType) GetTrueStep() *Step {
	if x != nil {
		return x.TrueStep
	}
	return nil
}

func (x *IfStepType) GetFalseStep() *Step {
	if x != nil {
		return x.FalseStep
	}
	return nil
}

type ForStepType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Times   int32 `protobuf:"varint,1,opt,name=Times,proto3" json:"Times,omitempty"`
	SubStep *Step `protobuf:"bytes,2,opt,name=SubStep,proto3" json:"SubStep,omitempty"`
}

func (x *ForStepType) Reset() {
	*x = ForStepType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_files_step_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForStepType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForStepType) ProtoMessage() {}

func (x *ForStepType) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_files_step_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForStepType.ProtoReflect.Descriptor instead.
func (*ForStepType) Descriptor() ([]byte, []int) {
	return file_api_proto_files_step_proto_rawDescGZIP(), []int{3}
}

func (x *ForStepType) GetTimes() int32 {
	if x != nil {
		return x.Times
	}
	return 0
}

func (x *ForStepType) GetSubStep() *Step {
	if x != nil {
		return x.SubStep
	}
	return nil
}

type SequenceStepType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubSteps []*Step `protobuf:"bytes,1,rep,name=SubSteps,proto3" json:"SubSteps,omitempty"`
}

func (x *SequenceStepType) Reset() {
	*x = SequenceStepType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_files_step_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SequenceStepType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SequenceStepType) ProtoMessage() {}

func (x *SequenceStepType) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_files_step_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SequenceStepType.ProtoReflect.Descriptor instead.
func (*SequenceStepType) Descriptor() ([]byte, []int) {
	return file_api_proto_files_step_proto_rawDescGZIP(), []int{4}
}

func (x *SequenceStepType) GetSubSteps() []*Step {
	if x != nil {
		return x.SubSteps
	}
	return nil
}

type ScriptStepType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Script string `protobuf:"bytes,1,opt,name=Script,proto3" json:"Script,omitempty"`
}

func (x *ScriptStepType) Reset() {
	*x = ScriptStepType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_files_step_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScriptStepType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScriptStepType) ProtoMessage() {}

func (x *ScriptStepType) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_files_step_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScriptStepType.ProtoReflect.Descriptor instead.
func (*ScriptStepType) Descriptor() ([]byte, []int) {
	return file_api_proto_files_step_proto_rawDescGZIP(), []int{5}
}

func (x *ScriptStepType) GetScript() string {
	if x != nil {
		return x.Script
	}
	return ""
}

type RequestStepType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Request *SingleRequest `protobuf:"bytes,1,opt,name=Request,proto3" json:"Request,omitempty"`
}

func (x *RequestStepType) Reset() {
	*x = RequestStepType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_files_step_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestStepType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestStepType) ProtoMessage() {}

func (x *RequestStepType) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_files_step_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestStepType.ProtoReflect.Descriptor instead.
func (*RequestStepType) Descriptor() ([]byte, []int) {
	return file_api_proto_files_step_proto_rawDescGZIP(), []int{6}
}

func (x *RequestStepType) GetRequest() *SingleRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

var File_api_proto_files_step_proto protoreflect.FileDescriptor

var file_api_proto_files_step_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x66, 0x69, 0x6c, 0x65,
	0x73, 0x2f, 0x73, 0x74, 0x65, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x47, 0x47,
	0x61, 0x72, 0x67, 0x61, 0x6e, 0x74, 0x75, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x2b, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x66, 0x69, 0x6c,
	0x65, 0x73, 0x2f, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x86,
	0x03, 0x0a, 0x04, 0x53, 0x74, 0x65, 0x70, 0x12, 0x31, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x47, 0x47, 0x61, 0x72, 0x67, 0x61, 0x6e, 0x74,
	0x75, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x65, 0x70,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x46, 0x0a, 0x0b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x65, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x47, 0x47, 0x61, 0x72, 0x67, 0x61, 0x6e, 0x74, 0x75, 0x61, 0x2e, 0x76, 0x31, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x65,
	0x70, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74,
	0x65, 0x70, 0x12, 0x43, 0x0a, 0x0a, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x53, 0x74, 0x65, 0x70,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x47, 0x47, 0x61, 0x72, 0x67, 0x61, 0x6e,
	0x74, 0x75, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x53, 0x74, 0x65, 0x70, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x53, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x53, 0x74, 0x65, 0x70, 0x12, 0x3a, 0x0a, 0x07, 0x46, 0x6f, 0x72, 0x53, 0x74,
	0x65, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x47, 0x47, 0x61, 0x72, 0x67,
	0x61, 0x6e, 0x74, 0x75, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46,
	0x6f, 0x72, 0x53, 0x74, 0x65, 0x70, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x46, 0x6f, 0x72, 0x53,
	0x74, 0x65, 0x70, 0x12, 0x37, 0x0a, 0x06, 0x49, 0x66, 0x53, 0x74, 0x65, 0x70, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x47, 0x47, 0x61, 0x72, 0x67, 0x61, 0x6e, 0x74, 0x75, 0x61,
	0x2e, 0x76, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x66, 0x53, 0x74, 0x65, 0x70,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x49, 0x66, 0x53, 0x74, 0x65, 0x70, 0x12, 0x49, 0x0a, 0x0c,
	0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x65, 0x70, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x47, 0x47, 0x61, 0x72, 0x67, 0x61, 0x6e, 0x74, 0x75, 0x61, 0x2e,
	0x76, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63,
	0x65, 0x53, 0x74, 0x65, 0x70, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x53, 0x65, 0x71, 0x75, 0x65,
	0x6e, 0x63, 0x65, 0x53, 0x74, 0x65, 0x70, 0x22, 0x63, 0x0a, 0x0a, 0x53, 0x74, 0x65, 0x70, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x3d, 0x0a,
	0x09, 0x53, 0x75, 0x62, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x47, 0x47, 0x61, 0x72, 0x67, 0x61, 0x6e, 0x74, 0x75, 0x61, 0x2e, 0x76, 0x31,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x65, 0x70, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x52, 0x09, 0x53, 0x75, 0x62, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xc1, 0x01, 0x0a,
	0x0a, 0x49, 0x66, 0x53, 0x74, 0x65, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x43, 0x0a, 0x0a, 0x53,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x53, 0x74, 0x65, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x47, 0x47, 0x61, 0x72, 0x67, 0x61, 0x6e, 0x74, 0x75, 0x61, 0x2e, 0x76, 0x31, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x53, 0x74, 0x65, 0x70,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x53, 0x74, 0x65, 0x70,
	0x12, 0x35, 0x0a, 0x08, 0x54, 0x72, 0x75, 0x65, 0x53, 0x74, 0x65, 0x70, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x47, 0x47, 0x61, 0x72, 0x67, 0x61, 0x6e, 0x74, 0x75, 0x61, 0x2e,
	0x76, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x65, 0x70, 0x52, 0x08, 0x54,
	0x72, 0x75, 0x65, 0x53, 0x74, 0x65, 0x70, 0x12, 0x37, 0x0a, 0x09, 0x46, 0x61, 0x6c, 0x73, 0x65,
	0x53, 0x74, 0x65, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x47, 0x47, 0x61,
	0x72, 0x67, 0x61, 0x6e, 0x74, 0x75, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x53, 0x74, 0x65, 0x70, 0x52, 0x09, 0x46, 0x61, 0x6c, 0x73, 0x65, 0x53, 0x74, 0x65, 0x70,
	0x22, 0x58, 0x0a, 0x0b, 0x46, 0x6f, 0x72, 0x53, 0x74, 0x65, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x33, 0x0a, 0x07, 0x53, 0x75, 0x62, 0x53, 0x74, 0x65, 0x70,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x47, 0x47, 0x61, 0x72, 0x67, 0x61, 0x6e,
	0x74, 0x75, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x65,
	0x70, 0x52, 0x07, 0x53, 0x75, 0x62, 0x53, 0x74, 0x65, 0x70, 0x22, 0x49, 0x0a, 0x10, 0x53, 0x65,
	0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x65, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x35,
	0x0a, 0x08, 0x53, 0x75, 0x62, 0x53, 0x74, 0x65, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x47, 0x47, 0x61, 0x72, 0x67, 0x61, 0x6e, 0x74, 0x75, 0x61, 0x2e, 0x76, 0x31,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x65, 0x70, 0x52, 0x08, 0x53, 0x75, 0x62,
	0x53, 0x74, 0x65, 0x70, 0x73, 0x22, 0x28, 0x0a, 0x0e, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x53,
	0x74, 0x65, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x22,
	0x4f, 0x0a, 0x0f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x65, 0x70, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x3c, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x47, 0x47, 0x61, 0x72, 0x67, 0x61, 0x6e, 0x74, 0x75, 0x61,
	0x2e, 0x76, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2a, 0x4f, 0x0a, 0x08, 0x53, 0x74, 0x65, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07,
	0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x45, 0x51,
	0x55, 0x45, 0x53, 0x54, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x43, 0x52, 0x49, 0x50, 0x54,
	0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x46, 0x4f, 0x52, 0x10, 0x03, 0x12, 0x06, 0x0a, 0x02, 0x49,
	0x46, 0x10, 0x04, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x45, 0x51, 0x55, 0x45, 0x4e, 0x43, 0x45, 0x10,
	0x05, 0x32, 0x58, 0x0a, 0x0b, 0x53, 0x74, 0x65, 0x70, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x49, 0x0a, 0x0b, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x53, 0x74, 0x65, 0x70, 0x12,
	0x19, 0x2e, 0x47, 0x47, 0x61, 0x72, 0x67, 0x61, 0x6e, 0x74, 0x75, 0x61, 0x2e, 0x76, 0x31, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x65, 0x70, 0x1a, 0x1f, 0x2e, 0x47, 0x47, 0x61,
	0x72, 0x67, 0x61, 0x6e, 0x74, 0x75, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x53, 0x74, 0x65, 0x70, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x42, 0x0e, 0x5a, 0x0c, 0x61,
	0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_api_proto_files_step_proto_rawDescOnce sync.Once
	file_api_proto_files_step_proto_rawDescData = file_api_proto_files_step_proto_rawDesc
)

func file_api_proto_files_step_proto_rawDescGZIP() []byte {
	file_api_proto_files_step_proto_rawDescOnce.Do(func() {
		file_api_proto_files_step_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_proto_files_step_proto_rawDescData)
	})
	return file_api_proto_files_step_proto_rawDescData
}

var file_api_proto_files_step_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_proto_files_step_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_api_proto_files_step_proto_goTypes = []interface{}{
	(StepType)(0),            // 0: GGargantua.v1.proto.StepType
	(*Step)(nil),             // 1: GGargantua.v1.proto.Step
	(*StepResult)(nil),       // 2: GGargantua.v1.proto.StepResult
	(*IfStepType)(nil),       // 3: GGargantua.v1.proto.IfStepType
	(*ForStepType)(nil),      // 4: GGargantua.v1.proto.ForStepType
	(*SequenceStepType)(nil), // 5: GGargantua.v1.proto.SequenceStepType
	(*ScriptStepType)(nil),   // 6: GGargantua.v1.proto.ScriptStepType
	(*RequestStepType)(nil),  // 7: GGargantua.v1.proto.RequestStepType
	(*SingleRequest)(nil),    // 8: GGargantua.v1.proto.SingleRequest
}
var file_api_proto_files_step_proto_depIdxs = []int32{
	0,  // 0: GGargantua.v1.proto.Step.Type:type_name -> GGargantua.v1.proto.StepType
	7,  // 1: GGargantua.v1.proto.Step.RequestStep:type_name -> GGargantua.v1.proto.RequestStepType
	6,  // 2: GGargantua.v1.proto.Step.ScriptStep:type_name -> GGargantua.v1.proto.ScriptStepType
	4,  // 3: GGargantua.v1.proto.Step.ForStep:type_name -> GGargantua.v1.proto.ForStepType
	3,  // 4: GGargantua.v1.proto.Step.IfStep:type_name -> GGargantua.v1.proto.IfStepType
	5,  // 5: GGargantua.v1.proto.Step.SequenceStep:type_name -> GGargantua.v1.proto.SequenceStepType
	2,  // 6: GGargantua.v1.proto.StepResult.SubResult:type_name -> GGargantua.v1.proto.StepResult
	6,  // 7: GGargantua.v1.proto.IfStepType.ScriptStep:type_name -> GGargantua.v1.proto.ScriptStepType
	1,  // 8: GGargantua.v1.proto.IfStepType.TrueStep:type_name -> GGargantua.v1.proto.Step
	1,  // 9: GGargantua.v1.proto.IfStepType.FalseStep:type_name -> GGargantua.v1.proto.Step
	1,  // 10: GGargantua.v1.proto.ForStepType.SubStep:type_name -> GGargantua.v1.proto.Step
	1,  // 11: GGargantua.v1.proto.SequenceStepType.SubSteps:type_name -> GGargantua.v1.proto.Step
	8,  // 12: GGargantua.v1.proto.RequestStepType.Request:type_name -> GGargantua.v1.proto.SingleRequest
	1,  // 13: GGargantua.v1.proto.StepService.ExecuteStep:input_type -> GGargantua.v1.proto.Step
	2,  // 14: GGargantua.v1.proto.StepService.ExecuteStep:output_type -> GGargantua.v1.proto.StepResult
	14, // [14:15] is the sub-list for method output_type
	13, // [13:14] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_api_proto_files_step_proto_init() }
func file_api_proto_files_step_proto_init() {
	if File_api_proto_files_step_proto != nil {
		return
	}
	file_api_proto_files_single_request_sender_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_api_proto_files_step_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Step); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_files_step_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StepResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_files_step_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IfStepType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_files_step_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForStepType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_files_step_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SequenceStepType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_files_step_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScriptStepType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_files_step_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestStepType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_proto_files_step_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_proto_files_step_proto_goTypes,
		DependencyIndexes: file_api_proto_files_step_proto_depIdxs,
		EnumInfos:         file_api_proto_files_step_proto_enumTypes,
		MessageInfos:      file_api_proto_files_step_proto_msgTypes,
	}.Build()
	File_api_proto_files_step_proto = out.File
	file_api_proto_files_step_proto_rawDesc = nil
	file_api_proto_files_step_proto_goTypes = nil
	file_api_proto_files_step_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// StepServiceClient is the client API for StepService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type StepServiceClient interface {
	ExecuteStep(ctx context.Context, in *Step, opts ...grpc.CallOption) (*StepResult, error)
}

type stepServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewStepServiceClient(cc grpc.ClientConnInterface) StepServiceClient {
	return &stepServiceClient{cc}
}

func (c *stepServiceClient) ExecuteStep(ctx context.Context, in *Step, opts ...grpc.CallOption) (*StepResult, error) {
	out := new(StepResult)
	err := c.cc.Invoke(ctx, "/GGargantua.v1.proto.StepService/ExecuteStep", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// StepServiceServer is the server API for StepService service.
type StepServiceServer interface {
	ExecuteStep(context.Context, *Step) (*StepResult, error)
}

// UnimplementedStepServiceServer can be embedded to have forward compatible implementations.
type UnimplementedStepServiceServer struct {
}

func (*UnimplementedStepServiceServer) ExecuteStep(context.Context, *Step) (*StepResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExecuteStep not implemented")
}

func RegisterStepServiceServer(s *grpc.Server, srv StepServiceServer) {
	s.RegisterService(&_StepService_serviceDesc, srv)
}

func _StepService_ExecuteStep_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Step)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StepServiceServer).ExecuteStep(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/GGargantua.v1.proto.StepService/ExecuteStep",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StepServiceServer).ExecuteStep(ctx, req.(*Step))
	}
	return interceptor(ctx, in, info, handler)
}

var _StepService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "GGargantua.v1.proto.StepService",
	HandlerType: (*StepServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ExecuteStep",
			Handler:    _StepService_ExecuteStep_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/proto_files/step.proto",
}
